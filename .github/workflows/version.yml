name: 自动发布并更新 PR 内容

on:
  workflow_dispatch:
  push:
    branches:
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-release:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 安装依赖
        run: pnpm install --no-frozen-lockfile

      - name: 配置 Git 用户
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 创建或切换分支
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(pnpm pkg get version | tr -d '"')
          RELEASE_BRANCH="release/v$VERSION"
          if git show-ref --verify --quiet refs/heads/$RELEASE_BRANCH; then
            git checkout $RELEASE_BRANCH
          else
            git checkout -b $RELEASE_BRANCH
          fi
          git push origin $RELEASE_BRANCH --force || git push -u origin $RELEASE_BRANCH

      - name: 更新提交
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(pnpm pkg get version | tr -d '"')
          RELEASE_BRANCH="release/v$VERSION"
          pnpm release -p angular -i CHANGELOG.md -s
          git add CHANGELOG.md package.json
          git commit -m "chore: 发布版本 v$VERSION 🚀" || echo "无更改需要提交"
          git push origin $RELEASE_BRANCH --force

      - name: 创建或更新 PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(pnpm pkg get version | tr -d '"')
          RELEASE_BRANCH="release/v$VERSION"
          CHANGELOG=$(awk -v version="v$VERSION" 'BEGIN {flag=0}
            /^## / {if ($2 == version) flag=1; else if (flag) exit}
            flag {print}' CHANGELOG.md)
          BODY=$(printf "### 更新日志\n\n%s\n" "$CHANGELOG")
          EXISTING_PR=$(gh pr list --head "$RELEASE_BRANCH" --base main --json number --jq '.[0].number')

          if [ -z "$EXISTING_PR" ]; then
            gh pr create \
              --head "$RELEASE_BRANCH" \
              --base main \
              --title "发布版本 v$VERSION 🚀" \
              --body "$BODY"
          else
            gh pr edit "$EXISTING_PR" \
              --body "$BODY"
          fi

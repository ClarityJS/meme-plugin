name: 自动发布并更新 PR 内容

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}

    steps:
      - name: 检查是否需要进行版本更新
        id: check
        run: |
          latest_commit_message="${{ github.event.head_commit.message }}"
          if [[ "$latest_commit_message" =~ ^chore:\ 发布版本.* ]]; then
            echo "已有版本更新，跳过版本更新"
            echo "::set-output name=should_release::false"
          elif git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q '.pre-commit-config.yaml'; then
            echo "更新了pre-commit依赖, 跳过版本更新"
            echo "::set-output name=should_release::false"
          else
            echo "进行版本更新"
            echo "::set-output name=should_release::true"
          fi

  auto-release:
    needs: check-commit-message
    if: needs.check-commit-message.outputs.should_release == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: 安装依赖
        run: pnpm install --no-frozen-lockfile

      - name: 配置 Git 用户
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: 运行 release-it
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm release --ci --config .release-it.json

      - name: 提交更新
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(pnpm pkg get version | tr -d '"')
          RELEASE_BRANCH="release/v$VERSION"
          git checkout -b $RELEASE_BRANCH || git checkout $RELEASE_BRANCH
          git add CHANGELOG.md package.json
          git commit -m "chore: 发布版本 v$VERSION 🚀" || echo "无更改需要提交"
          git push origin $RELEASE_BRANCH --force || git push -u origin $RELEASE_BRANCH --force

      - name: 创建或更新 PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(pnpm pkg get version | tr -d '"')
          RELEASE_BRANCH="release/v$VERSION"
          CHANGELOG=$(awk 'BEGIN {flag=0}
            /^## / {if (flag) exit; flag=1}
            flag {print}' CHANGELOG.md)
          BODY=$(printf "# 更新日志\n\n%s\n" "$CHANGELOG")
          EXISTING_PR=$(gh pr list --head "$RELEASE_BRANCH" --base main --json number --jq '.[0].number')

          if [ -z "$EXISTING_PR" ]; then
            gh pr create \
              --head "$RELEASE_BRANCH" \
              --base main \
              --title "chore: 发布版本 v$VERSION 🚀" \
              --body "$BODY"
          else
            gh pr edit "$EXISTING_PR" \
              --body "$BODY"
          fi
